/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uidesign;

import java.awt.Color;
import java.awt.Font;
import java.sql.RowId;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import static uidesign.FileOperations.cust;
import static uidesign.FileOperations.index;

/**
 *
 * @author Aastha, Keerthi
 */

public class Presentation extends javax.swing.JFrame {
private FileOperations fileop;
private ReadWrite rw1;
    /**
     * Creates new form Presentation
     */
    public Presentation() {
        initComponents();
        fileop = new FileOperations();
        rw1 = new ReadWrite();
        rw1.read("repository.txt");
        dateReceived_field.setText(new SimpleDateFormat("MM/dd/yyyy").format(new Date().getTime()));
        display();
        
    }

    DefaultTableModel model;
    public void display() {

        model = (DefaultTableModel) JTable.getModel() ; 

        jPanel1.setBorder(BorderFactory.createTitledBorder(
				BorderFactory.createEtchedBorder(), "Table View"));
        jPanel2.setBorder(BorderFactory.createTitledBorder(
				BorderFactory.createEtchedBorder(), "Data View"));
        model.setRowCount(0);
        for(int i=0;i<index;i++) {
           String temp[] = new String[12];
            temp = FileOperations.cust[i].getCustomer();
              String[] data = new String[]{temp[0], temp[8]};
           
           model.addRow(data); 
        }
        JTable.setModel(model);
        
        
        JTable.updateUI();
 
    }

    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        Error_field = new javax.swing.JLabel();
        firstName_field = new javax.swing.JTextField();
        lastName_field = new javax.swing.JTextField();
        middleName_field = new javax.swing.JTextField();
        address1_field = new javax.swing.JTextField();
        address2_field = new javax.swing.JTextField();
        city_field = new javax.swing.JTextField();
        state_field = new javax.swing.JTextField();
        zipcode_field = new javax.swing.JTextField();
        phonenumber_field = new javax.swing.JTextField();
        email_field = new javax.swing.JTextField();
        proofOfPurchase_field = new javax.swing.JCheckBox();
        dateReceived_field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        modifyButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rebates Processing Application");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Lucida Console", 0, 16)); // NOI18N
        setForeground(new java.awt.Color(102, 204, 255));
        setResizable(false);

        JTable.setAutoCreateRowSorter(true);
        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "PHONE NUMBER"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTable.getTableHeader().setReorderingAllowed(false);
        JTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(JTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Error_field.setForeground(new java.awt.Color(255, 51, 51));
        Error_field.setText(" ");

        firstName_field.setToolTipText("First Name should only contain letters (a-z or A-Z).\nIt can only be upto 20 characters long.");
        firstName_field.setPreferredSize(new java.awt.Dimension(6, 25));
        firstName_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstName_fieldActionPerformed(evt);
            }
        });
        firstName_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstName_fieldFocusLost(evt);
            }
        });

        lastName_field.setToolTipText("Last Name should only contain letters (a-z or A-Z).\nIt can only be upto 20 characters long.");
        lastName_field.setPreferredSize(new java.awt.Dimension(6, 25));
        lastName_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastName_fieldFocusLost(evt);
            }
        });

        middleName_field.setToolTipText("First Name should only contain letters (a-z or A-Z).\nIt can only be upto 1 characters long.");
        middleName_field.setPreferredSize(new java.awt.Dimension(6, 25));
        middleName_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                middleName_fieldFocusLost(evt);
            }
        });

        address1_field.setToolTipText("Address Line 1 can only be upto 35 characters long.");
        address1_field.setPreferredSize(new java.awt.Dimension(6, 25));
        address1_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                address1_fieldFocusLost(evt);
            }
        });

        address2_field.setToolTipText("Address Line 2 can only be upto 35 characters long.");
        address2_field.setPreferredSize(new java.awt.Dimension(6, 25));
        address2_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                address2_fieldFocusLost(evt);
            }
        });

        city_field.setToolTipText("City should only contain letters (a-z or A-Z).\nIt can only be upto 25 characters long.");
        city_field.setPreferredSize(new java.awt.Dimension(6, 25));
        city_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                city_fieldFocusLost(evt);
            }
        });

        state_field.setToolTipText("State can only be a valid US State.\nIt can only be upto 2 characters long.");
        state_field.setPreferredSize(new java.awt.Dimension(6, 25));
        state_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                state_fieldActionPerformed(evt);
            }
        });
        state_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                state_fieldFocusLost(evt);
            }
        });

        zipcode_field.setToolTipText("Zipcode can only contain digits.\nIt can only be upto 9 digits long.");
        zipcode_field.setPreferredSize(new java.awt.Dimension(6, 25));
        zipcode_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipcode_fieldActionPerformed(evt);
            }
        });
        zipcode_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                zipcode_fieldFocusLost(evt);
            }
        });

        phonenumber_field.setToolTipText("Phone No. should only contain digits.\nIt can only be upto 21 characters long.");
        phonenumber_field.setPreferredSize(new java.awt.Dimension(6, 25));
        phonenumber_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                phonenumber_fieldFocusLost(evt);
            }
        });

        email_field.setToolTipText("Email Address should be valid email id.\nIt can only be upto 60 characters long.");
        email_field.setPreferredSize(new java.awt.Dimension(6, 25));
        email_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email_fieldActionPerformed(evt);
            }
        });
        email_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                email_fieldFocusLost(evt);
            }
        });

        proofOfPurchase_field.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        proofOfPurchase_field.setSelected(true);
        proofOfPurchase_field.setText("Proof Attached");
        proofOfPurchase_field.setPreferredSize(new java.awt.Dimension(46, 26));
        proofOfPurchase_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proofOfPurchase_fieldActionPerformed(evt);
            }
        });

        dateReceived_field.setToolTipText("Date needs to be in MM/DD/YYYY format.");
        dateReceived_field.setPreferredSize(new java.awt.Dimension(6, 25));
        dateReceived_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateReceived_fieldFocusLost(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("First Name*:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Last Name*:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Middle Name:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Address Line 1*:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Address Line 2:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("City*:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("State*:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Zipcode*:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setText(" Email*:");
        jLabel13.setAutoscrolls(true);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setText("Phone Number*:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setText("Date received*:");

        clearButton.setText("Reset");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        newButton.setText("Add");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        modifyButton.setText("Modify");
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                deleteButtonComponentHidden(evt);
            }
        });
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(15, 15, 15)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(284, 284, 284))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addComponent(jLabel7)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(zipcode_field, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addComponent(jLabel6)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(state_field, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(22, 22, 22))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(32, 32, 32)
                                                    .addComponent(modifyButton)
                                                    .addGap(33, 33, 33)
                                                    .addComponent(deleteButton))
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel11)
                                                        .addComponent(jLabel13))
                                                    .addGap(18, 18, 18)
                                                    .addComponent(dateReceived_field, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(22, 22, 22))))
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(email_field, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel12)
                                            .addGap(18, 18, 18)
                                            .addComponent(phonenumber_field, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(22, 22, 22)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(city_field, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel8))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(address1_field, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                                            .addComponent(middleName_field, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lastName_field, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(firstName_field, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(address2_field, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(22, 22, 22)))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Error_field, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(proofOfPurchase_field, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(Error_field, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstName_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastName_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(middleName_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address1_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address2_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(city_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(state_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipcode_field, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phonenumber_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(proofOfPurchase_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateReceived_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton)
                    .addComponent(newButton)
                    .addComponent(modifyButton)
                    .addComponent(deleteButton))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstName_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstName_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstName_fieldActionPerformed

    private void zipcode_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipcode_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipcode_fieldActionPerformed

    private void email_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email_fieldActionPerformed
    int oneError=0;
    private Color redC=new Color(255,195,195);
    private Color whiteC=new Color(255,255,255);
    
    private void Highlight(boolean[] message) {
        if (message[0]==false) {
            firstName_field.setBackground(redC);
        }
        if (message[1]==false) {
            lastName_field.setBackground(redC);
        }
        if(message[2]==false) {
            middleName_field.setBackground(redC);
        }
        if(message[3]==false) {
            address1_field.setBackground(redC);
        }
        if(message[4]==false) {
            address2_field.setBackground(redC);
        }
        if(message[5]==false) {
            city_field.setBackground(redC);
        }
        if(message[6]==false) {
            state_field.setBackground(redC);
        }
        if(message[7]==false) {
            zipcode_field.setBackground(redC);
        }
        if(message[8]==false) {
            phonenumber_field.setBackground(redC);
        }
        if(message[9]==false) {
            email_field.setBackground(redC);
        }
        if(message[11]==false) {
            dateReceived_field.setBackground(redC);
        }
        if(oneError==1 && message[12]==false) {
            Error_field.setText("Please check the input fields. Entry for the same name already exists");
            firstName_field.setBackground(redC);
            lastName_field.setBackground(redC);
            middleName_field.setBackground(redC);
            oneError=2;
        }
    }
    String input[] = new String[12];
    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        // TODO add your handling code here:
        clearLabel();
        oneError=1;
        firstName_field.setBackground(whiteC);
        lastName_field.setBackground(whiteC);
        middleName_field.setBackground(whiteC);
        address1_field.setBackground(whiteC);
        address2_field.setBackground(whiteC);
        city_field.setBackground(whiteC);
        state_field.setBackground(whiteC);
        zipcode_field.setBackground(whiteC);
        phonenumber_field.setBackground(whiteC);
        email_field.setBackground(whiteC);
        dateReceived_field.setBackground(whiteC);
        
        input[0] = firstName_field.getText();
        input[1] = lastName_field.getText();
        input[2] = middleName_field.getText();
        input[3] = address1_field.getText();
        input[4] = address2_field.getText();
        input[5] = city_field.getText();
        input[6] = state_field.getText();
        input[7] = zipcode_field.getText();
        input[8] = phonenumber_field.getText();
        input[9] = email_field.getText();
        if (proofOfPurchase_field.isSelected()) {
            input[10] = "Yes";
        } else {
            input[10] = "No";
        }
        input[11] = dateReceived_field.getText();

        FileOperations file = new FileOperations();
        boolean message[] = file.Add(input);
        if (message[13]==false) {
            //JOptionPane.showMessageDialog(this, message);
            Highlight(message);
            if(oneError!=2) {
                Error_field.setText("Please check the input fields");
            }
        } else {
            //JOptionPane.showMessageDialog(this, "New input added successfully");
            Error_field.setText(" ");
            model.insertRow(model.getRowCount(), new Object[]{input[0],input[8]});
            clearFields();
            clearLabel();
        }

    }//GEN-LAST:event_newButtonActionPerformed

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        // TODO add your handling code here:
        clearLabel();
        oneError=1;
        firstName_field.setBackground(whiteC);
        lastName_field.setBackground(whiteC);
        middleName_field.setBackground(whiteC);
        address1_field.setBackground(whiteC);
        address2_field.setBackground(whiteC);
        city_field.setBackground(whiteC);
        state_field.setBackground(whiteC);
        zipcode_field.setBackground(whiteC);
        phonenumber_field.setBackground(whiteC);
        email_field.setBackground(whiteC);
        dateReceived_field.setBackground(whiteC);
        int index=0;
          if(JTable.getSelectedRow()==-1) {
          //  JOptionPane.showMessageDialog(this, "Please select a record from the list to modify");
                Error_field.setText("Please select a record from the list to modify");
        } else {
            index=JTable.getSelectedRow();
            int newIndex = JTable.convertRowIndexToModel(index);
            input[0] = firstName_field.getText();
            input[1] = lastName_field.getText();
            input[2] = middleName_field.getText();
            input[3] = address1_field.getText();
            input[4] = address2_field.getText();
            input[5] = city_field.getText();
            input[6] = state_field.getText();
            input[7] = zipcode_field.getText();
            input[8] = phonenumber_field.getText();
            input[9] = email_field.getText();
            if (proofOfPurchase_field.isSelected()) {
                input[10] = "Yes";
            } else {
                input[10] = "No";
            }
            input[11] = dateReceived_field.getText();

          //  FileOperations file = new FileOperations();
            boolean message[] = fileop.Modify(input, newIndex);
            if (message[13]==false) {
                //JOptionPane.showMessageDialog(this, message);
                Highlight(message);
      //          Highlight_modify(input, index);
                if(oneError!=2) {
                Error_field.setText("Please check the input fields");
            }
            } else {
             //   JOptionPane.showMessageDialog(this, "Record modified successfully");
               Error_field.setText("Record modified successfully");
             
               display();
                clearFields();
                clearLabel();
            }
        }     
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        clearLabel();
        firstName_field.setBackground(whiteC);
        lastName_field.setBackground(whiteC);
        middleName_field.setBackground(whiteC);
        address1_field.setBackground(whiteC);
        address2_field.setBackground(whiteC);
        city_field.setBackground(whiteC);
        state_field.setBackground(whiteC);
        zipcode_field.setBackground(whiteC);
        phonenumber_field.setBackground(whiteC);
        email_field.setBackground(whiteC);
        dateReceived_field.setBackground(whiteC);
        int index=0;
        if (JTable.getSelectedRow()==-1) {
           // JOptionPane.showMessageDialog(this, "Please select a record from the list to delete");
            
            Error_field.setText("Please select a record from the list to delete");
        } else {
             index=JTable.getSelectedRow();
             int newIndex = JTable.convertRowIndexToModel(index);
            input[0] = firstName_field.getText();
            input[1] = lastName_field.getText();
            input[2] = middleName_field.getText();
            input[3] = address1_field.getText();
            input[4] = address2_field.getText();
            input[5] = city_field.getText();
            input[6] = state_field.getText();
            input[7] = zipcode_field.getText();
            input[8] = phonenumber_field.getText();
            input[9] = email_field.getText();
            if (proofOfPurchase_field.isSelected()) {
                input[10] = "Yes";
            } else {
                input[10] = "No";
            }
            input[11] = dateReceived_field.getText();

          //  FileOperations file = new FileOperations();
            Boolean status = fileop.Delete(input,newIndex);
            if (!status) {
              //  JOptionPane.showMessageDialog(this, "Record deletion unsuccessful! Please check field values");
                Error_field.setText("Record deletion unsuccessful! Please check field values");
            } else {
              //  JOptionPane.showMessageDialog(this, "Record deleted successfully");
                Error_field.setText("Record deleted successfully");
                model.removeRow(newIndex);
                clearFields();
                clearLabel();
            }
            
        }
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clearFields();
        clearLabel();
        firstName_field.setBackground(whiteC);
        lastName_field.setBackground(whiteC);
        middleName_field.setBackground(whiteC);
        address1_field.setBackground(whiteC);
        address2_field.setBackground(whiteC);
        city_field.setBackground(whiteC);
        state_field.setBackground(whiteC);
        zipcode_field.setBackground(whiteC);
        phonenumber_field.setBackground(whiteC);
        email_field.setBackground(whiteC);
        dateReceived_field.setBackground(whiteC);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void state_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_state_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_state_fieldActionPerformed

    private void proofOfPurchase_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proofOfPurchase_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proofOfPurchase_fieldActionPerformed
    //Function called when any row is from the JTable is selected
    private void JTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableMouseClicked
        
        int selectedIndex = JTable.getSelectedRow();
        int newIndex = JTable.convertRowIndexToModel(selectedIndex);
        clearLabel();
        String temp[]=fileop.retrieveCustomer(newIndex);
        firstName_field.setText(temp[0]);
        lastName_field.setText(temp[1]);
        middleName_field.setText(temp[2]);
        address1_field.setText(temp[3]);
        address2_field.setText(temp[4]);
        city_field.setText(temp[5]);
        state_field.setText(temp[6]);
        zipcode_field.setText(temp[7]);
        phonenumber_field.setText(temp[8]);
        email_field.setText(temp[9]);
        if(temp[10].equalsIgnoreCase("Yes"))
        proofOfPurchase_field.setSelected(true);
        else
            proofOfPurchase_field.setSelected(false);
        dateReceived_field.setText(temp[11]);
   
    }//GEN-LAST:event_JTableMouseClicked

    private void deleteButtonComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_deleteButtonComponentHidden
    if(JTable.getSelectedRow()==-1) {
    }   
    }//GEN-LAST:event_deleteButtonComponentHidden
    JTextField source;
    private void firstName_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstName_fieldFocusLost
       source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_firstName(data);
        if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid First Name");
           firstName_field.setBackground(redC);
        }
        else {
            firstName_field.setBackground(whiteC);
            clearLabel();
        }
    }//GEN-LAST:event_firstName_fieldFocusLost

    private void lastName_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastName_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_lastName(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid Last Name");
           lastName_field.setBackground(redC);
        }
       else {
           lastName_field.setBackground(whiteC);
           clearLabel();
       }
           
    }//GEN-LAST:event_lastName_fieldFocusLost

    private void middleName_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_middleName_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_middleName(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid Middle Name");
           middleName_field.setBackground(redC);
        }
       else {
           middleName_field.setBackground(whiteC);
           clearLabel();
       }
    }//GEN-LAST:event_middleName_fieldFocusLost

    private void address1_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_address1_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_addressLine1(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid Address Line 1");
           address1_field.setBackground(redC);
        }
       else {
           address1_field.setBackground(whiteC);
           clearLabel();
       }
    }//GEN-LAST:event_address1_fieldFocusLost

    private void address2_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_address2_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_addressLine2(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid Address Line 2");
           address2_field.setBackground(redC);
        }
       else {
           address2_field.setBackground(whiteC);
           clearLabel();
       }
    }//GEN-LAST:event_address2_fieldFocusLost
    //Function to do on tab validation for City field
    private void city_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_city_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_City(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid City.");
           city_field.setBackground(redC);
        }
       else {
           city_field.setBackground(whiteC);
           clearLabel();
       }
    }//GEN-LAST:event_city_fieldFocusLost

    private void state_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_state_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_State(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid State.");
           state_field.setBackground(redC);
        }
       else {
           state_field.setBackground(whiteC);
           clearLabel();
       }
    }//GEN-LAST:event_state_fieldFocusLost

    private void zipcode_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_zipcode_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_Zipcode(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid Zipcode.");
           zipcode_field.setBackground(redC);
        }
       else {
           zipcode_field.setBackground(whiteC);
           clearLabel();
       }
    }//GEN-LAST:event_zipcode_fieldFocusLost

    private void phonenumber_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phonenumber_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_phoneNumber(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid Phone Number.");
           phonenumber_field.setBackground(redC);
        }
       else {
           phonenumber_field.setBackground(whiteC);
           clearLabel();
       }
    }//GEN-LAST:event_phonenumber_fieldFocusLost

    private void email_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_email_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_Emailid(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid EmailId.");
           email_field.setBackground(redC);
        }
       else {
           email_field.setBackground(whiteC);
           clearLabel();
       }
    }//GEN-LAST:event_email_fieldFocusLost

    private void dateReceived_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateReceived_fieldFocusLost
        source = (JTextField)evt.getSource();  
       String data= source.getText();
       boolean Valid = fileop.Validate_lastName(data);
       if (Valid==false) {
           clearLabel();
           Error_field.setText("Please enter a valid Date.");
           dateReceived_field.setBackground(redC);
        }
       else {
           dateReceived_field.setBackground(whiteC);
           clearLabel();
       }
    }//GEN-LAST:event_dateReceived_fieldFocusLost
    private void clearLabel() {
        Error_field.setText("");
    }
    private void clearFields(){
        firstName_field.setText("");
        lastName_field.setText("");
        middleName_field.setText("");
        address1_field.setText("");
        address2_field.setText("");
        city_field.setText("");
        state_field.setText("");
        zipcode_field.setText("");
        phonenumber_field.setText("");
        email_field.setText("");
        proofOfPurchase_field.setSelected(true);
        dateReceived_field.setText(new SimpleDateFormat("MM/dd/yyyy").format(new Date().getTime()));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Presentation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Presentation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Presentation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Presentation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Presentation().setVisible(true);
            }
        });
    }
String temp[] = new String[12];
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Error_field;
    private javax.swing.JTable JTable;
    private javax.swing.JTextField address1_field;
    private javax.swing.JTextField address2_field;
    private javax.swing.JTextField city_field;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField dateReceived_field;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField email_field;
    private javax.swing.JTextField firstName_field;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField lastName_field;
    private javax.swing.JTextField middleName_field;
    private javax.swing.JButton modifyButton;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField phonenumber_field;
    private javax.swing.JCheckBox proofOfPurchase_field;
    private javax.swing.JTextField state_field;
    private javax.swing.JTextField zipcode_field;
    // End of variables declaration//GEN-END:variables

}
